---
- name: Check DNS resolution for manual setup
  shell: dig +short {{ domain }}
  register: dns_result
  when: dns_provider == 'manual'

- name: DNS has successfully resolved correctly
  debug:
    msg: "DNS resolution corrects for {{ domain }}!"
  when:
    - dns_provider == 'manual'
    - ansible_host in dns_result.stdout_lines

- name: Fail if DNS does not resolve correctly (for manual setup)
  fail:
    msg: "DNS resolution incorrect for {{ domain }}!"
  when:
    - dns_provider == 'manual'
    - ansible_host not in dns_result.stdout_lines

- name: Cloudflare - Set A Records
  community.general.cloudflare_dns:
    account_email: "{{ CF_EMAIL }}"
    account_api_token: "{{ CF_TOKEN }}"
    record: "@"
    zone: "{{ item.value }}"
    type: A
    ttl: 300
    value: "{{ hostvars[item.key].ansible_host }}"
    proxied: no
  with_dict: "{{ machine_domain_map }}"
  when:
    - dns_provider == 'cloudflare'
    - ansible_host not in dns_result.stdout_lines
    - item.key not in inventory_hostname
    - item.key != 'redir_dns'

- name: Cloudflare - Set A record for DNS (special handling for redir_dns)
  cloudflare_dns:
    account_email: "{{ CF_EMAIL }}"
    account_api_token: "{{ CF_TOKEN }}"
    record: "dns"
    zone: "{{ item.value.split('.')[-2] + '.' + item.value.split('.')[-1] }}"
    value: "{{ hostvars[item.key].ansible_host }}"
    type: "A"
    proxied: no
    ttl: 300
  when: 
    - item.key == 'redir_dns'
    - dns_provider == 'cloudflare'
    - ansible_host not in dns_result.stdout_lines
  loop: "{{ machine_domain_map.items() }}"

- name: Set NS record for DNS (special handling for redir_dns)
  cloudflare_dns:
    account_email: "{{ CF_EMAIL }}"
    account_api_token: "{{ CF_TOKEN }}"
    record: "{{ item.value.split('.')[0] }}"
    value: "dns.{{ item.value.split('.')[-2] + '.' + item.value.split('.')[-1] }}"
    type: "NS"
  when: 
    - item.key == 'redir_dns'
    - dns_provider == 'cloudflare'
    - ansible_host not in dns_result.stdout_lines
  loop: "{{ machine_domain_map.items() }}"

- name: Cloudflare - Set CNAME record
  community.general.cloudflare_dns:
    account_email: "{{ CF_EMAIL }}"
    account_api_token: "{{ CF_TOKEN }}"
    zone: "{{ zone_cname }}"
    record: "{{ record_cname }}"
    type: CNAME
    value: "{{ value_cname }}"
    ttl: 1
    proxied: no
  when:
    - dns_provider == 'cloudflare'
    - ansible_host not in dns_result.stdout_lines

- name: Cloudflare - Set TXT record
  community.general.cloudflare_dns:
    account_email: "{{ CF_EMAIL }}"
    account_api_token: "{{ CF_TOKEN }}"
    zone: "{{ zone_txt }}"
    record: "@"
    type: TXT
    value: "{{ value_txt }}"
    ttl: 1
    proxied: no
  when:
    - dns_provider == 'cloudflare'
    - ansible_host not in dns_result.stdout_lines