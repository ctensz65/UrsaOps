---
- name: Ensure snap is installed
  apt:
    name: snapd
    state: present

- name: Check if default Go version is installed
  shell:
    cmd: "/usr/bin/go version | /usr/local/go/bin/go version"
  register: go_installed
  failed_when: false
  changed_when: false

- name: Ensure snap is installed
  debug:
    msg: "{{ go_installed }}"
  when: go_installed is defined

- name: Remove symbolic link /usr/bin/go
  file:
    path: /usr/bin/go
    state: absent
  become: yes
  when: "'/lib/go1.13' in go_installed.stdout"

- name: Remove directory /lib/go1.13
  file:
    path: /lib/go1.13
    state: absent
    recurse: yes
  become: yes
  when: "'/lib/go1.13' in go_installed.stdout"

- name: Download Golang Package [Version 1.18]
  get_url:
    url: https://golang.org/dl/go1.18.linux-amd64.tar.gz
    dest: /tmp/go1.18.linux-amd64.tar.gz
  when: 
    - go_version_18 is defined
    - go_installed.rc != 0 or 'go1.18' not in go_installed.stdout

- name: Extract Golang Package [Version 1.18]
  become: yes
  unarchive:
    src: /tmp/go1.18.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes
  when: 
    - go_version_18 is defined
    - go_installed.rc != 0 or 'go1.18' not in go_installed.stdout

- name: Ensure Go 1.18 is available in PATH
  lineinfile:
    path: /etc/profile
    line: "export PATH=$PATH:/usr/local/go/bin"
  when: go_version_18 is defined

- name: Ensure Go path is in root's .bashrc
  become: yes
  become_user: root
  lineinfile:
    path: /root/.bashrc
    line: "export PATH=$PATH:/usr/local/go/bin"
    create: yes
    state: present
  when: go_version_18 is defined

- name: Install Go using snap if not installed manually
  command:
    cmd: snap install go --classic
  register: snap_result
  when: go_installed.rc != 0 and not go_version_18

- name: Ensure Go is available in PATH
  shell: echo "export PATH=$PATH:/snap/bin" >> ~/.bashrc
  args:
    executable: /bin/bash
  when: snap_result.changed
