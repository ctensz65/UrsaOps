---  
- name: Check if group_redir_https exists and has members
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Check if group_redir_https has members
      set_fact:
        use_redirector_var: true
      when: 
        - "'group_redir_https' not in groups"
        - "groups['group_redir_https'] is not defined or groups['group_redir_https'] | length == 0"

    - name: Add host from redirector.https variable if group_redir_https is empty
      add_host:
        name: "{{ item }}"
        groups: temp_redir_https_group
      loop: "{{ redirector.https }}"
      when: use_redirector_var | default(false)
    
  tags:
    - count_redir

- name: Validate total redirector HTTPs
  hosts: group_redir_https:temp_redir_https_group
  tasks:
    - name: Check number of hosts in temp_redir_https_group
      debug:
        msg: "Only One Redirector Defined in temp_redir_https_group!"
      when: (groups['temp_redir_https_group'] | default([])) | length == 1

    - name: Check number of hosts in group_redir_https
      debug:
        msg: "Found Two Redirectors in group_redir_https!"
      when: (groups['group_redir_https'] | default([])) | length == 2
      
  tags:
    - count_redir

- name: Domain mapping
  hosts: group_redir_https:temp_redir_https_group
  gather_facts: no
  tasks:
  
    - block:
        - name: Print dns_provider value
          debug:
            var: dns_provider
            
        - name: Prepare domain map for a single redirector
          set_fact:
            machine_domain_map:
              redirector_https: "{{ domain[0] }}"
          when: (groups['temp_redir_https_group'] | default([])) | length == 1

        - name: Prepare domain map for multiple redirectors
          set_fact:
            machine_domain_map:
              redirector_https_1: "{{ domain[0] }}"
              redirector_https_2: "{{ domain[1] }}"
          when: (groups['group_redir_https'] | default([])) | length == 2
      when: dns_provider != 'manual' 

    - name: Add DNS machine to domain map
      set_fact:
        machine_domain_map_dns:
          redir_dns: dns_subdomain.split('.')[1] + '.' + dns_subdomain.split('.')[2] })
      when: redirdns is defined

- name: Setup DNS based on provider [Redirector HTTPs]
  hosts: group_redir_https:temp_redir_https_group
  become: yes
  tasks:
    - include_role:
        name: common
        tasks_from: dns_setup
  tags:
    - dns_setup

- name: Setup DNS based on provider [Redirector DNS]
  hosts: "{{ redir_dns | default('redirector_dns') }}"
  become: yes
  tasks:
    - include_role:
        name: common
        tasks_from: dns_setup
      when: redirdns is defined
  tags:
    - dns_setup

- name: Install Nginx Service
  hosts: group_redir_https:temp_redir_https_group
  become: yes
  roles:
    - role: nginx
  tags:
    - setup_nginx

- name: Install Certbot
  hosts: group_redir_https:temp_redir_https_group
  become: yes
  tasks:
    - include_role:
        name: common
        tasks_from: certbot
  tags:
    - certbot

- name: Extract Tailscale IP C2 Server
  hosts: "{{ c2_machine | default('c2srv') }}"
  become: yes
  tasks:
    - name: Check ip tailscale
      command:
        cmd: "tailscale ip --4"
      register: c2srv_ip

    - name: Update group_vars with IP
      delegate_to: localhost
      become: no
      lineinfile:
        path: "{{ ansible_dir }}/inventory/group_vars/c2_segment.yml"
        regexp: '^ip_tailscale_c2:'
        line: "ip_tailscale_c2: \"{{ c2srv_ip.stdout }}\""
  tags:
    - set_ip_c2

- name: Add c2domain.local to /etc/hosts
  hosts: group_redir_https:temp_redir_https_group
  become: yes
  tasks:
    - name: Add c2domain.local to /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: "^.*{{ domain_c2_local | regex_escape() }}.*$"
        line: "{{ ip_tailscale_c2 }} {{ domain_c2_local }}"
        state: present
  tags:
    - add_hosts

- name: Setup Nginx Reverse Proxy
  hosts: group_redir_https:temp_redir_https_group
  vars:
    default_profile: "1"
    profile_value: "{{ profile | default(default_profile) }}"
  become: yes
  tasks:
    - include_role:
        name: nginx
        tasks_from: setup
  tags:
    - setup_redir

- name: Setup CoreDNS for DNS Redirector
  hosts: "{{ redir_dns | default('redirector_dns') }}"
  become: yes
  tasks:
    - include_role:
        name: coredns
        tasks_from: main
      when: redirdns == 'true'
  tags:
    - setup_coredns

- name: Sync Certificates
  hosts: group_redir_https:temp_redir_https_group
  become: yes

  tasks:
    - name: Generate Keystore for [CS]
      include_role:
        name: nginx
        tasks_from: keystore_cs
      when: c2 == 'cobalt'
      tags:
        - keystore_cs

    - name: Copy Let's Encrypt Certificates for [Sliver]
      include_role:
        name: nginx
        tasks_from: extract_certs
      when: c2 == 'sliver'
      tags:
        - cert_sliver

- name: Setup C2 [Cobalt Strike]
  hosts: "{{ c2_machine | default('c2srv') }}"
  become: yes

  tasks:
    - block:
        - name: Check archive file existence
          include_role:
            name: c2_cobalt

        - name: Setup CobaltStrike - Teamserver
          include_role:
            name: c2_cobalt
            tasks_from: teamserver

      when: c2 == 'cobalt'

  tags:
    - setup_cs

- name: Setup C2 [Havoc]
  hosts: "{{ c2_machine | default('c2srv') }}"
  become: yes
  vars:
    go_version_18: true
  tasks:
    - name: Check Golang Installation
      include_tasks: "{{ ansible_dir }}/roles/common/tasks/go.yml"
      when: c2 == 'havoc'

    - name: Clone Repo
      include_role:
        name: c2_havoc
      when: c2 == 'havoc'
    
    - name: Setup Teamserver
      include_role:
        name: c2_havoc
        tasks_from: teamserver
      when: c2 == 'havoc'
  tags:
    - setup_havoc

- name: Setup C2 [Sliver]
  hosts: "{{ c2_machine | default('c2srv') }}"
  become: yes
  tasks:
    - name: Check Golang Installation
      include_tasks: "{{ ansible_dir }}/roles/common/tasks/go.yml"
      when: c2 == 'sliver'
      
    - name: Setup C2 Server
      include_role:
        name: c2_sliver
        tasks_from: main
      when: c2 == 'sliver'

    - name: Setup C2 Client
      include_role:
        name: c2_sliver
        tasks_from: client
      when:
        - c2 == 'sliver'
        - jumphost | default(false)
  tags:
    - setup_sliver

- name: Configure DNS for C2 [Sliver]
  hosts: "{{ redir_dns | default('redirector_dns') }}"
  become: yes

  tasks:
    - name: Disable System Resolved Service
      include_role:
        name: common
        tasks_from: system_resolved
      when:
        - redirdns is defined
        - c2 == 'sliver'
      tags:
        - disable_resolved

    - name: Start CoreDNS
      include_role:
        name: coredns
        tasks_from: start
      when:
        - redirdns is defined
        - c2 == 'sliver'
      tags:
        - start_coredns

