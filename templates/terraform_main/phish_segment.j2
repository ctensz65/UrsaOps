{## ==================== AWS ==================== ##}
{% macro aws_instance_module(suffix, data, ingress_rules) %}
module "{{ suffix }}" {
  source              = "../../../modules/aws"
  instance_name       = "{{ suffix }}"
  tag_name            = "{{ suffix }}"
  computer_name       = "{{ data.vm_hostname }}"
  username_vm         = "{{ data.vm_username }}"
  
  ingress_rules       = {{ ingress_rules | tojson }}

  egress_rules = {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
{% endmacro -%}
{## ==================== Azure ==================== ##}
{%- macro azure_instance_module(suffix, data, inbound) %}
module "{{ suffix }}" {
  source              = "../../../modules/azure"
  resource_group_name = "segment_phish_resources"
  instance_name       = "{{ suffix }}"
  computer_name       = "{{ data.vm_hostname }}"
  username_vm         = "{{ data.vm_username }}"
  vm_size             = "Standard_B1s"
  tags_segment        = "{{ suffix }}"
  inbound_rules       = {{ inbound | tojson }}
}
{% endmacro -%}

{## ==================== AWS ==================== ##}
{%- if phish_data.provider == "aws" -%}
{% set redir_inbound = [
    { "from_port": 22, "to_port": 22, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] },
    { "from_port": 443, "to_port": 443, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] },
    { "from_port": 8080, "to_port": 8080, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] }
  ]
%}
{{ aws_instance_module('redir_phish', phish_data.redir, redir_inbound) }}
{% set srv_inbound = [
    { "from_port": 22, "to_port": 22, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] }
  ]
%}
{{ aws_instance_module('phish_srv', phish_data.server, srv_inbound) }}
{## ==================== Azure ==================== ##}
{%- elif phish_data.provider == "azure" -%}
{% set redir_inbound = [{ "port": "22", "protocol": "Tcp" }, { "port": "443", "protocol": "Tcp" }, { "port": "8080", "protocol": "Tcp" }] %}
{{ azure_instance_module('redir_phish', phish_data.redir, redir_inbound) }}
{% set srv_inbound = [{ "port": "22", "protocol": "Tcp" }] %}
{{ aws_instance_module('phish_srv', phish_data.server, srv_inbound) }}
{% endif -%}

locals {
  phish_instances = [
    module.redir_phish.instance_details,
    module.phish_srv.instance_details
  ]

  inventory_content = templatefile("${path.module}/../../../templates/terraform_main/inventory.tpl", {
    phish_instances = local.phish_instances
  })
}

resource "local_file" "ansible_inventory" {
  content  = local.inventory_content
  filename = "${path.root}/inventory.ini"
}
