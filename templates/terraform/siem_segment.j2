{## ==================== AWS ==================== ##}
{% macro aws_instance_module(suffix, data, ingress_rules) %}
module "{{ suffix }}" {
  source              = "{{ TERRAFORM_PATH }}/modules/aws"
  instance_name       = "{{ suffix }}"
  tag_name            = "{{ suffix }}"
  computer_name       = "{{ data.vm_hostname }}"
  vm_size             = "{{ data.vm_size }}"
  local_user          = "${var.local_user}"
  
  ingress_rules       = {{ ingress_rules | tojson }}

  egress_rules = [{
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }]
}
{% endmacro -%}
{## ==================== Azure ==================== ##}
{%- macro azure_instance_module(suffix, data, inbound) %}
module "{{ suffix }}" {
  source              = "{{ TERRAFORM_PATH }}/modules/azure"
  resource_group_name = "segment_phish_resources"
  instance_name       = "{{ suffix }}"
  computer_name       = "{{ data.vm_hostname }}"
  username_vm         = "{{ data.vm_username }}"
  vm_size             = "{{ data.vm_size }}"
  tags_segment        = "{{ suffix }}"
  local_user          = "${var.local_user}"
  inbound_rules       = {{ inbound | tojson }}
}
{% endmacro -%}
{## ==================== AWS ==================== ##}
{%- if siem_data.provider == "aws" -%}
{% set rule_inbound = [
    { "from_port": 22, "to_port": 22, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] },
    { "from_port": 443, "to_port": 443, "protocol": "tcp", "cidr_blocks": ["0.0.0.0/0"] },
  ]
%}
{{ aws_instance_module(siem_data.instance_name, siem_data, rule_inbound) }}
{## ==================== Azure ==================== ##}
{%- elif siem_data.provider == "azure" -%}
{% set rule_inbound = [{ "port": "22", "protocol": "Tcp" }, { "port": "443", "protocol": "Tcp" }] %}
{{ azure_instance_module(siem_data.instance_name, siem_data, rule_inbound) }}
{% endif -%}

locals {
  siem_instances = [
    module.{{ siem_data.instance_name }}.instance_details
  ]

  inventory_content = templatefile("{{ TEMPLATE_PATH }}", {
    siem_instances = local.siem_instances,
    headscale_instances = [],
    c2_instances = [],
    phish_instances = []
  })
}

resource "local_file" "ansible_inventory" {
  content  = local.inventory_content
  filename = "${path.root}/inventory.ini"
}

variable "local_user" {}

{% if siem_data.provider == "azure" %}
output "siem_instance_passwords" {
  value = [for instance in local.siem_instances : instance.pass if lookup(instance, "pass", null) != null]
  sensitive = true
}
{% endif %}

output "siem_instance_ssh_details" {
  value = [for instance in local.siem_instances : "${instance.hostname} = ssh ${instance.user}@${instance.ip}"]
}